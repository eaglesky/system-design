

Knownledge:

1. Network.

1.1 How does webserver work with browser?
https://aprelium.com/data/doc/2/abyssws-linux-doc-html/howdowswork.html

1.2 Web server(http server) vs application server.
http://www.javaworld.com/article/2077354/learn-java/app-server-web-server-what-s-the-difference.html
http://stackoverflow.com/questions/936197/what-is-the-difference-between-application-server-and-web-server/936257#936257
App server often includes web server. Web server is mainly responsible for receiving
requests and return static html contents, while app server has more complex business
logic that processes the request. Web servers provide the caching and scaling functionality
demanded by web access, while app servers provide application level services such
as connection pooling, object pooling, transaction support, messaging services etc.

1.3 Web hosting service
A web hosting service is a type of Internet hosting service that allows individuals
and organizations to make their website accessible via the World Wide Web. Web hosts
are companies that provide space on a server owned or leased for use by clients, as
well as providing Internet connectivity, typically in a data center.
Example: Bluehost, Dreamhost, Go Daddy, Host Gator, pair Networks.

Different types of web hosting service
Shared, dedicated, VPS, Cloud.
https://hostingfacts.com/different-types-of-web-hosting/.

1.4 Computer Protocols- TCP/IP, POP, SMTP, HTTP, FTP and More
http://vlaurie.com/computers2/Articles/protocol.htm

1.4.1 TCP vs UDP
https://www.howtogeek.com/190014/htg-explains-what-is-the-difference-between-tcp-and-udp/
UDP is less reliable but much faster, so it is preferable for transmitting time-critical
data, like live video stream and online game data.

1.4.2 Ports
Open tcp port 80(http) and tcp port 443(https) for the traffic coming into the LBs.
Opening tcp port 80 for the inside traffic after first layer of LB can save putting
SSL certificate on all of the web servers.
Open tcp port 3306(MySQL db server default)

1.5 Cookies
Http Cookies and third-party cookies.
Drawbacks of cookies:https://en.wikipedia.org/wiki/HTTP_cookie#Drawbacks_of_cookies

1.6 Sessions.
http://stackoverflow.com/questions/3804209/what-are-sessions-how-do-they-work
Three ways of managing sessions:
https://www.youtube.com/watch?v=32UGARg8AzU
Cookies
URL rewriting, Hidden fields
https://www.youtube.com/watch?v=xGAVFsLfn2w
https://www.youtube.com/watch?v=Pv3FST7OcvQ

2. Load balacing:
The DNS server can return the ip of load balancer instead of a server, and let the
load balancer decide which server the request should be sent to.

2.1 Load balancing strategies:
(1) Based on load of the server(how busy it is, the cpu usage, or the number of connections).
(2) Store different types of files on different servers, and use the suffix of url
to discreminate them. 
(3) Round robin. Example: BIND(the most widely used Domain Name System (DNS) software
on the Internet) uses this strategy to resolve a host name --- same host name, but
different ip each time. The drawback of this strategy is that one or few server could
always receive requests that require most computation resource, making them much busier
than the rest. Another thing that can show it is a bad strategy is DNS caching, which
exists on the user's computer(maintained by the OS and browser). This caching is a
map of host name and ip address that will expire(clear) after a certain amount of
time(TTL). It is only used for speeding up the response time 
(https://www.lifewire.com/introduction-to-domain-name-system-817512). So if an user
keeps doing expensive work, it will always be done on the same server during TTL and
that server will be always busy. Therefore instead of relying on the DNS server to
do the load balancing, it is better to let the DNS server return the ip of the load
balancer.

Server-side sessions could cause problems for load balancing, because one session
for a user is only stored on one server. Solution: store all the sessions on a dedicated
session server, or the load balancer itself, which can be accessed by all servers.
However what if the server is down?
We could try using RAID to achieve data redundancy to some degree, but this is still
not a good solution, as it is possible that the whole server is down. A better way
to deal with it is to use multiple servers, which requires some syncing process.
Sticky session can also be a solution here, which can be implemented by storing an
id in the user's cookie and let LB to remember the mapping of that id to the ip of
the server the session belongs to.

* RAID(Redundant array of inexpensive disks):
It is a data storage virtualization technology that combines multiple physical disk
drive components into a single logical unit for the purposes of data redundancy,
performance improvement, or both.

RAID0: Uses data striping(technique of segmenting logically sequential data, such
as a file, so that consecutive segments are stored on different physical storage
devices) to perform concurrent read and write, so that the performance could be improved
by the number of disks. No data redundancy involved.

RAID1: Uses data mirroring to implement redundancy. Typically two idendical hard drives.
Write throughput is always slower because every drive must be updated, and the slowest
drive limits the write performance. 

RAID10: A combination of above.

2.2 Load Balancer choices:
Software:
ELB(AWS Elastic Load Balancing), HAProxy, LVS(Linux Virtual Server, http://www.linuxvirtualserver.org/whatis.html)
Hardware:
Barracuda, Cisco, Citrix, F5..
